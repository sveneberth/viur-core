# File : .pep8speaks.yml

scanner:
    diff_only: True  # If False, the entire file touched by the Pull Request is scanned for errors. If True, only the diff is scanned.
    linter: pycodestyle  # Other option is flake8

pycodestyle:  # Same as scanner.linter value. Other option is flake8
    max-line-length: 120  # Default is 79 in PEP 8, we choose
    ignore:  # Errors and warnings to ignore
        - E121 # continuation line under-indented for hanging indent
        - E123 # closing bracket does not match indentation of opening bracket’s line
        - E126 # continuation line over-indented for hanging indent
        - E133 # closing bracket is missing indentation
        - E226 # missing whitespace around arithmetic operator
        - E241 # multiple spaces after ‘,’
        - E242 # tab after ‘,’
        - E704 # multiple statements on one line (def)
        - W503 # line break before binary operator
        - W504 # line break after binary operator
        - W505 # doc line too long (82 > 79 characters)
    count: False # print total number of errors and warnings to standard error and set exit code to 1 if total is not null
    first: False # show first occurrence of each error
    show-pep8: True # show text of PEP 8 for each error (implies --first)
    show-source: True # show source code for each error
    statistics: False # count errors and warnings


no_blank_comment: False  # If True, no comment is made on PR without any errors.
descending_issues_order: False  # If True, PEP 8 issues in message will be displayed in descending order of line numbers in the file
only_mention_files_with_errors: True  # If False, a separate status section for each file is made in the comment.

message:  # Customize the comment made by the bot
    opened:  # Messages when a new PR is submitted
        header: "Hello @{name}! Thanks for opening this PR. "
                # The keyword {name} is converted into the author's username
        footer: "Do see the [Hitchhiker's guide to code style](https://goo.gl/hqbW4r)"
                # The messages can be written as they would over GitHub
    updated:  # Messages when new commits are added to the PR
        header: "Hello @{name}! Thanks for updating this PR. "
        footer: ""  # Why to comment the link to the style guide everytime? :)
    no_errors: "There are currently no PEP 8 issues detected in this Pull Request. Cheers! :beers: "
